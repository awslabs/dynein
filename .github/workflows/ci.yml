on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
    - main

name: CI

jobs:
  build_and_test:
    name: Test and build on Linux
    runs-on: ubuntu-latest
    env:
      RUST_LOG: debug # Output debug log
      RUST_BACKTRACE: 1 # Dump backtrace on panic
      DYNEIN_TEST_NO_DOCKER_SETUP: true
      # define AWS credentials in environment for test
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    services:
      dynamodb:
        # Pinned to the version not to be broken with latest
        image: amazon/dynamodb-local:1.22.0
        ports:
        - 8000:8000
        - 8001:8000
    steps:
    - uses: actions/checkout@v4
    - name: Install rust toolchain
      run: |
        rustup set profile minimal
        rustup component add rustfmt clippy
    - uses: Swatinem/rust-cache@640a22190e7a783d4c409684cea558f081f92012
      # This is the most recent commit as of 2024-03-22.
      # Also, it uses Node.js 20.
      with:
        shared-key: build-and-test
    - name: Run cargo fmt
      run: cargo fmt --all -- --check
    - name: Run clippy check
      run: cargo clippy -- -D warnings
    - name: Run tests
      run: cargo test --no-fail-fast --all-features
    - name: Build with release flag
      run: cargo build --release --all-features
  build_and_test_on_windows:
    name: Test and build on Windows
    runs-on: windows-2022
    env:
      RUST_LOG: debug # Output debug log
      RUST_BACKTRACE: 1 # Dump backtrace on panic
      DYNEIN_TEST_NO_DOCKER_SETUP: true
      # define AWS credentials in environment for test
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    steps:
    - uses: actions/checkout@v4
    - name: Install rust toolchain
      run: |
        rustup set profile minimal
        rustup component add rustfmt clippy
    - uses: Swatinem/rust-cache@640a22190e7a783d4c409684cea558f081f92012
        # This is the most recent commit as of 2024-03-22.
        # Also, it uses Node.js 20.
      with:
        shared-key: build-and-test-on-windows
    - name: Run tests for CLI
      # Currently, we only conduct snapshot tests because GitHub Actions does not support containers in Windows.
      run: cargo test cli_tests
    - name: Build with release flag
      run: cargo build --release --all-features
